import { KeycloakInstance } from 'keycloak-js';
export default class Security {
    static isLoggedIn: boolean;
    static onTokenUpdate: (token: string) => void;
    static getConfig(clientId?: string): any;
    static login(clientId: string): Promise<LoginResult>;
    static checkAuthenticated(clientId: string): Promise<LoginResult>;
    static verifyAndLogin(rawBearerToken: string, useTokenToLogin: boolean, showLoginScreen: boolean, redirectUrl?: string): Promise<any>;
    static parseToken(rawBearerToken: string): any;
    private static keycloak;
    private static updateTokenInterval;
    private static verifyToken;
    private static resolveClientId;
    private static setUpdateTokenInterval;
    private static initializeAuth;
    private static authenticated;
    private static notAuthenticated;
}
export interface LoginResult {
    keycloak: KeycloakInstance;
    authenticated: boolean;
}
